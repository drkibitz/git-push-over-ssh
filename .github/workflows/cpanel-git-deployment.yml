name: cPanel Git Deployment
description: "A reusable workflow for deploying to a [cPanel](https://cpanel.net/) hosted site using Git. See the [Guide to Gitâ„¢ Deployment](https://docs.cpanel.net/knowledge-base/web-services/guide-to-git-deployment/) for more details."

on:
  workflow_call:
    inputs:
      branch:
        type: string
        description: "The Git branch to deploy and push to the remote repository."
        required: true
    secrets:
      debug:
        description: "Set to `true` to enable debug logging."
        required: false
      remote-url:
        description: "The Git+SSH URL of the remote repository (e.g. `git@hostname:user/repo.git`, `ssh://user@hostname:port/repo.git`)."
        required: true
      ssh-private-key:
        description: "The SSH private key used to authenticate with the remote repository."
        required: true

    outputs:
      deployment-id:
        description: "The deployment ID generated after a git push with new changes."
        value: ${{ jobs.deploy-to-cpanel-host.outputs.deployment-id }}

jobs:
  deploy-to-cpanel-host:
    name: Deploy to cPanel host
    runs-on: ubuntu-latest

    outputs:
      deploy-id: ${{ steps.get-deploy-id.outputs.deploy-id }}

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.branch }}

      - name: Git push over SSH
        id: git-push
        uses: drkibitz/github/actions/git-push-over-ssh@main
        with:
          debug: ${{ secrets.debug }}
          push-options: --force
          remote-url: ${{ secrets.remote-url }}
          ssh-private-key: ${{ secrets.ssh-private-key }}

      - name: Get deployment ID
        id: get-deployment-id
        run: |
          deployment_id=$(grep -Eo "deploy_id: [0-9]+" "${{ steps.git-push.outputs.push-log }}" | cut -d ' ' -f2)
          if [ -z "${deployment_id}" ]; then
            echo "::error::FAIL: No 'deploy_id' found in Git push log!"
            exit 1
          fi
          echo -e "::notice::SUCCESS! Deployment ID: $deployment_id"
          echo "deployment-id=$deployment_id" >> "$GITHUB_OUTPUT"
